//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseEntities
{
    using System;
    using System.Collections.Generic;
    
    [Serializable]
    public partial class Market : IEquatable<Market>
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Market()
        {
            this.RateSet = new HashSet<Rate>();
            Name = "empty";
            Country = "empty";
        }

        public Market(string name, string country, double demandLevel, double competitionLevel, MarketTrade trade) : base()
        {
            Name = name;
            Country = country;
            DemandLevel = demandLevel;
            CompetitionLevel = competitionLevel;
            Trade = trade;
        }

        public int Id { get; set; }
        public string Name { get; set; }
        public double TotalRate { get; set; }
        public string Country { get; set; }
        public double DemandLevel { get; set; }
        public double CompetitionLevel { get; set; }
        public MarketTrade Trade { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Rate> RateSet { get; set; }

        public bool Equals(Market other)
        {
            return Name.Equals(other.Name) && TotalRate.Equals(other.TotalRate) && Country.Equals(other.Country)
                && DemandLevel.Equals(other.DemandLevel) && CompetitionLevel.Equals(other.CompetitionLevel) && Trade.Equals(other.Trade);
        }
    }
}
